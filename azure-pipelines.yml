trigger:
- main

resources:
- repo: self

variables:
  imageRepo: sampleapp
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Docker@2
      displayName: Build an image
      inputs:
        containerRegistry: 'K8SExamplesACR'
        repository: '$(imageRepo)'
        command: 'buildAndPush'
        Dockerfile: '$(Build.SourcesDirectory)/app/Dockerfile'
        tags: |
          $(tag)
          latest
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)/s/kubernetes'
        artifact: 'manifests'
        publishLocation: 'pipeline'     

- stage: 'wiz_container_scan'
  dependsOn: Build
  displayName: 'wiz container scan'
  jobs:
  - job: 'wiz_container_scan'
    displayName: 'wiz container scan'
    pool:
      vmImage: ubuntu-latest
    steps:
    - script: |
        # Install Wiz CLI
        curl -o wizcli https://wizcli.app.wiz.io/wizcli
        chmod +x wizcli

    - script: |
        # Authenticate to the Wiz API
        ./wizcli auth --id $(WIZ_CLIENT_ID) --secret $(WIZ_CLIENT_SECRET)
      env:
        WIZ_CLIENT_ID: $(WIZ_CLIENT_ID)
        WIZ_CLIENT_SECRET: $(WIZ_CLIENT_SECRET)

    - script: |
        # Scan Docker Image
        ./wizcli docker scan --image docker.io/tim4wiz/wizdemo:1.0

- stage: 'wiz_IaC_Kubernetes_scan'
  dependsOn: wiz_container_scan  
  displayName: 'wiz IaC Kubernetes scan'
  jobs:
  - job: 'wiz_IaC_Kubernetes_scan'
    displayName: 'wiz container scan'
    pool:
      vmImage: ubuntu-latest
    steps:
    - script: |
        # Install Wiz CLI
        curl -o wizcli https://wizcli.app.wiz.io/wizcli
        chmod +x wizcli

    - script: |
        # Authenticate to the Wiz API
        ./wizcli auth --id $(WIZ_CLIENT_ID) --secret $(WIZ_CLIENT_SECRET)
      env:
        WIZ_CLIENT_ID: $(WIZ_CLIENT_ID)
        WIZ_CLIENT_SECRET: $(WIZ_CLIENT_SECRET)

    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'specific'
        project: 'Experiments'
        pipeline: $(Build.BuildId)  
        artifactName: 'manifests'
        targetPath: '$(Pipeline.Workspace)/manifests'

    - script: |
        # Scan Kubernetes Manifests
        ./wizcli iac scan 


- stage: Deploy
  displayName: Deploy to Dev
  dependsOn: wiz_IaC_Kubernetes_scan
  variables:
    acrsecret: k8sexamplesacrauth
    acrdevurl: 'k8sexamplesacr.azurecr.io'
    replicaNo: 3
  jobs:
  - job: Deploy
    displayName: Deploy to AKS
    pool: 
      vmImage: ubuntu-latest
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'manifests'
        targetPath: '$(Pipeline.Workspace)/manifests'
    - task: KubernetesManifest@0
      inputs:
        action: 'createSecret'
        kubernetesServiceConnection: 'K8S_Examples_cluster-deafault'
        namespace: 'default'
        secretType: 'dockerRegistry'
        secretName: '$(acrsecret)'
        dockerRegistryEndpoint: 'K8SExamplesACR'
    - task: KubernetesManifest@0
      inputs:
        action: 'deploy'
        kubernetesServiceConnection: 'K8S_Examples_cluster-deafault'
        namespace: 'default'
        manifests: |
          $(Pipeline.Workspace)/manifests/deployment.yml
          $(Pipeline.Workspace)/manifests/service.yml

