trigger:
- main

resources:
- repo: self

variables:
  imageRepo: sampleapp
  tag: '$(Build.BuildId)'

stages:
- stage: Build_and_WizContainerScan
  displayName: Build and Scan Image
  jobs:
  - job: Build_and_Scan_Image
    displayName: Build and Scan
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Docker@2
      displayName: Build Docker Image
      inputs:
        containerRegistry: 'K8SExamplesACR'
        repository: '$(imageRepo)'
        command: 'build'
        Dockerfile: '$(Build.SourcesDirectory)/app/Dockerfile'
        tags: |
          # $(tag)
          latest

    - script: |
        # Capture the Docker image name and tag into variables
        imageName=$(imageRepo)
        imageTag=$(tag)
        echo "Docker Image Name: $imageName"
        echo "Docker Image Tag: $imageTag"
      displayName: 'Capture Image Info'    

    - script: |
        # Install Wiz CLI
        curl -o wizcli https://wizcli.app.wiz.io/wizcli
        chmod +x wizcli

        # Authenticate to the Wiz API
        ./wizcli auth --id $(WIZ_CLIENT_ID) --secret $(WIZ_CLIENT_SECRET)
      env:
        WIZ_CLIENT_ID: $(WIZ_CLIENT_ID)
        WIZ_CLIENT_SECRET: $(WIZ_CLIENT_SECRET)
    - script: |
        echo "Docker Images on the Agent:"
        docker images
      displayName: 'List Docker Images'

    - script: |
        # Scan Docker Image
        ./wizcli docker scan --image $imageName:latest
        # K8SExamplesACR.azurecr.io/$(imageRepo):$(tag)

- stage: Push_to_Registry
  displayName: Push to Registry
  dependsOn: Build_and_WizContainerScan
  jobs:
  - job: Push_to_Registry
    displayName: Push to Registry
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Docker@2
      displayName: Push Docker Image to Registry
      inputs:
        containerRegistry: 'K8SExamplesACR'
        repository: '$(imageRepo)'
        command: 'push'
        tags: |
          $(tag)
          latest


- stage: 'wiz_IaC_Kubernetes_scan'
  dependsOn: Push_to_Registry  
  displayName: 'wiz IaC Kubernetes scan'
  jobs:
  - job: 'wiz_IaC_Kubernetes_scan'
    displayName: 'wiz container scan'
    pool:
      vmImage: ubuntu-latest
    steps:
    - script: |
        # Install Wiz CLI
        curl -o wizcli https://wizcli.app.wiz.io/wizcli
        chmod +x wizcli

    - script: |
        # Authenticate to the Wiz API
        ./wizcli auth --id $(WIZ_CLIENT_ID) --secret $(WIZ_CLIENT_SECRET)
      env:
        WIZ_CLIENT_ID: $(WIZ_CLIENT_ID)
        WIZ_CLIENT_SECRET: $(WIZ_CLIENT_SECRET)

    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'specific'
        project: 'Experiments'
        pipeline: $(Build.BuildId)  
        artifactName: 'manifests'
        targetPath: '$(Pipeline.Workspace)/manifests'

    - script: |
        # Scan Kubernetes Manifests
        ./wizcli iac scan 


- stage: Deploy
  displayName: Deploy to Dev
  dependsOn: wiz_IaC_Kubernetes_scan
  variables:
    acrsecret: k8sexamplesacrauth
    acrdevurl: 'k8sexamplesacr.azurecr.io'
    replicaNo: 3
  jobs:
  - job: Deploy
    displayName: Deploy to AKS
    pool: 
      vmImage: ubuntu-latest
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'manifests'
        targetPath: '$(Pipeline.Workspace)/manifests'
    - task: KubernetesManifest@0
      inputs:
        action: 'createSecret'
        kubernetesServiceConnection: 'K8S_Examples_cluster-deafault'
        namespace: 'default'
        secretType: 'dockerRegistry'
        secretName: '$(acrsecret)'
        dockerRegistryEndpoint: 'K8SExamplesACR'
    - task: KubernetesManifest@0
      inputs:
        action: 'deploy'
        kubernetesServiceConnection: 'K8S_Examples_cluster-deafault'
        namespace: 'default'
        manifests: |
          $(Pipeline.Workspace)/manifests/deployment.yml
          $(Pipeline.Workspace)/manifests/service.yml

